
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Input } from "@/components/ui/input";
import { BookOpen, Building2, Search, Users, TrendingUp, Star } from "lucide-react";
import { Link } from "react-router-dom";

interface Company {
  id: number;
  name: string;
  industry: string;
  employeeCount: number;
  location: string;
  logo: string;
  description: string;
  activeReaders: number;
  topBooks: Array<{
    title: string;
    author: string;
    readers: number;
    image: string;
  }>;
  averageRating: number;
}

const mockCompanies: Company[] = [
  {
    id: 1,
    name: "TechCorp",
    industry: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    employeeCount: 250,
    location: "–ú–æ—Å–∫–≤–∞",
    logo: "üè¢",
    description: "–í–µ–¥—É—â–∞—è IT-–∫–æ–º–ø–∞–Ω–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è—Å—è –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π",
    activeReaders: 89,
    averageRating: 4.6,
    topBooks: [
      { title: "–ß–∏—Å—Ç—ã–π –∫–æ–¥", author: "–†–æ–±–µ—Ä—Ç –ú–∞—Ä—Ç–∏–Ω", readers: 45, image: "üìö" },
      { title: "Microservices Patterns", author: "Chris Richardson", readers: 23, image: "üìñ" },
      { title: "System Design Interview", author: "Alex Xu", readers: 34, image: "‚öôÔ∏è" }
    ]
  },
  {
    id: 2,
    name: "InnovateLab",
    industry: "–°—Ç–∞—Ä—Ç–∞–ø",
    employeeCount: 75,
    location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
    logo: "üöÄ",
    description: "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –ø—Ä–æ–¥—É–∫—Ç—ã –±—É–¥—É—â–µ–≥–æ",
    activeReaders: 42,
    averageRating: 4.8,
    topBooks: [
      { title: "Lean Startup", author: "–≠—Ä–∏–∫ –†–∏—Å", readers: 34, image: "üöÄ" },
      { title: "Zero to One", author: "–ü–∏—Ç–µ—Ä –¢–∏–ª—å", readers: 28, image: "üí°" },
      { title: "The Hard Thing About Hard Things", author: "–ë–µ–Ω –ì–æ—Ä–æ–≤–∏—Ü", readers: 19, image: "üí™" }
    ]
  },
  {
    id: 3,
    name: "DesignStudio",
    industry: "–î–∏–∑–∞–π–Ω –∏ UX",
    employeeCount: 45,
    location: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
    logo: "üé®",
    description: "–î–∏–∑–∞–π–Ω-—Å—Ç—É–¥–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –≤—ã–¥–∞—é—â–∏–µ—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã",
    activeReaders: 31,
    averageRating: 4.7,
    topBooks: [
      { title: "–î–∏–∑–∞–π–Ω –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –≤–µ—â–µ–π", author: "–î–æ–Ω –ù–æ—Ä–º–∞–Ω", readers: 28, image: "üé®" },
      { title: "About Face", author: "–ê–ª–∞–Ω –ö—É–ø–µ—Ä", readers: 15, image: "üòä" },
      { title: "Steal Like an Artist", author: "–û—Å—Ç–∏–Ω –ö–ª–µ–æ–Ω", readers: 22, image: "üñºÔ∏è" }
    ]
  },
  {
    id: 4,
    name: "DataTech Solutions",
    industry: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
    employeeCount: 120,
    location: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
    logo: "üìä",
    description: "–ö–æ–º–ø–∞–Ω–∏—è –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é",
    activeReaders: 56,
    averageRating: 4.5,
    topBooks: [
      { title: "Python for Data Analysis", author: "–£—ç—Å –ú–∞–∫–∫–∏–Ω–Ω–∏", readers: 38, image: "üêç" },
      { title: "Hands-On Machine Learning", author: "–û—Ä–µ–ª—å–µ–Ω –ñ–µ—Ä–æ–Ω", readers: 29, image: "ü§ñ" },
      { title: "The Data Warehouse Toolkit", author: "–†–∞–ª—å—Ñ –ö–∏–º–±–∞–ª–ª", readers: 21, image: "üèóÔ∏è" }
    ]
  },
  {
    id: 5,
    name: "FinanceFirst",
    industry: "–§–∏–Ω–∞–Ω—Å—ã",
    employeeCount: 180,
    location: "–ú–æ—Å–∫–≤–∞",
    logo: "üí∞",
    description: "–§–∏–Ω—Ç–µ—Ö-–∫–æ–º–ø–∞–Ω–∏—è, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è",
    activeReaders: 67,
    averageRating: 4.4,
    topBooks: [
      { title: "–ü—Ä–∏–Ω—Ü–∏–ø—ã", author: "–†—ç–π –î–∞–ª–∏–æ", readers: 43, image: "üìà" },
      { title: "–ß–µ—Ä–Ω—ã–π –ª–µ–±–µ–¥—å", author: "–ù–∞—Å—Å–∏–º –¢–∞–ª–µ–±", readers: 35, image: "ü¶¢" },
      { title: "Thinking, Fast and Slow", author: "–î–∞–Ω–∏—ç–ª—å –ö–∞–Ω–µ–º–∞–Ω", readers: 28, image: "üß†" }
    ]
  },
  {
    id: 6,
    name: "GreenTech Innovations",
    industry: "–≠–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    employeeCount: 95,
    location: "–ö–∞–∑–∞–Ω—å",
    logo: "üå±",
    description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π",
    activeReaders: 38,
    averageRating: 4.9,
    topBooks: [
      { title: "Cradle to Cradle", author: "–ú–∞–π–∫–ª –ë—Ä–∞—É–Ω–≥–∞—Ä—Ç", readers: 25, image: "‚ôªÔ∏è" },
      { title: "The Sixth Extinction", author: "–≠–ª–∏–∑–∞–±–µ—Ç –ö–æ–ª–±–µ—Ä—Ç", readers: 19, image: "üåç" },
      { title: "Biomimicry", author: "–î–∂–∞–Ω–∏–Ω –ë–µ–Ω—å—é—Å", readers: 16, image: "üçÉ" }
    ]
  }
];

const Companies = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedIndustry, setSelectedIndustry] = useState("–í—Å–µ");

  const industries = ["–í—Å–µ", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–°—Ç–∞—Ä—Ç–∞–ø", "–î–∏–∑–∞–π–Ω –∏ UX", "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "–§–∏–Ω–∞–Ω—Å—ã", "–≠–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"];

  const filteredCompanies = mockCompanies.filter(company => {
    const matchesSearch = company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         company.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesIndustry = selectedIndustry === "–í—Å–µ" || company.industry === selectedIndustry;
    return matchesSearch && matchesIndustry;
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Navigation */}
      <nav className="bg-white/80 backdrop-blur-md border-b border-blue-200/50 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <Link to="/" className="flex items-center space-x-2">
              <BookOpen className="h-8 w-8 text-blue-600" />
              <span className="text-xl font-bold text-gray-900">ReadConnect</span>
            </Link>
            <div className="flex items-center space-x-4">
              <Link to="/books">
                <Button variant="ghost">–ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥</Button>
              </Link>
              <Link to="/companies">
                <Button variant="ghost" className="text-blue-600">–ö–æ–º–ø–∞–Ω–∏–∏</Button>
              </Link>
              <Link to="/profile">
                <Button variant="outline">–ü—Ä–æ—Ñ–∏–ª—å</Button>
              </Link>
            </div>
          </div>
        </div>
      </nav>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">–ö–∞—Ç–∞–ª–æ–≥ –∫–æ–º–ø–∞–Ω–∏–π</h1>
          <p className="text-lg text-gray-600">–£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ —á–∏—Ç–∞—é—Ç –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö –∏ –Ω–∞–π–¥–∏—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤</p>
        </div>

        {/* Search and Filters */}
        <div className="bg-white rounded-lg shadow-sm p-6 mb-8">
          <div className="flex flex-col md:flex-row gap-4 mb-6">
            <div className="flex-1 relative">
              <Search className="absolute left-3 top-3 h-4 w-4 text-gray-400" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–æ–º–ø–∞–Ω–∏–∏..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
          </div>
          
          <div className="flex flex-wrap gap-2">
            {industries.map((industry) => (
              <Badge
                key={industry}
                variant={selectedIndustry === industry ? "default" : "outline"}
                className="cursor-pointer hover:bg-blue-100"
                onClick={() => setSelectedIndustry(industry)}
              >
                {industry}
              </Badge>
            ))}
          </div>
        </div>

        {/* Companies Grid */}
        <div className="grid lg:grid-cols-2 gap-8">
          {filteredCompanies.map((company) => (
            <Card key={company.id} className="border-0 shadow-lg hover:shadow-xl transition-all duration-300">
              <CardHeader>
                <div className="flex items-start justify-between">
                  <div className="flex items-center space-x-4">
                    <div className="text-4xl">{company.logo}</div>
                    <div>
                      <CardTitle className="text-xl">{company.name}</CardTitle>
                      <CardDescription className="text-base mb-2">
                        {company.industry}
                      </CardDescription>
                      <div className="flex items-center space-x-4 text-sm text-gray-500">
                        <div className="flex items-center space-x-1">
                          <Building2 className="h-4 w-4" />
                          <span>{company.location}</span>
                        </div>
                        <div className="flex items-center space-x-1">
                          <Users className="h-4 w-4" />
                          <span>{company.employeeCount} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</span>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="flex items-center space-x-1">
                    <Star className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                    <span className="text-sm font-medium">{company.averageRating}</span>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  <p className="text-gray-600">{company.description}</p>
                  
                  <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
                    <div className="flex items-center space-x-2">
                      <TrendingUp className="h-5 w-5 text-blue-600" />
                      <span className="font-medium text-blue-900">–ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∏—Ç–∞—Ç–µ–ª–µ–π</span>
                    </div>
                    <Badge variant="secondary" className="bg-blue-100 text-blue-800">
                      {company.activeReaders}
                    </Badge>
                  </div>

                  <div>
                    <h4 className="font-semibold mb-3 text-gray-900">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏</h4>
                    <div className="space-y-2">
                      {company.topBooks.map((book, index) => (
                        <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                          <div className="flex items-center space-x-3">
                            <span className="text-2xl">{book.image}</span>
                            <div>
                              <p className="font-medium text-sm">{book.title}</p>
                              <p className="text-xs text-gray-500">{book.author}</p>
                            </div>
                          </div>
                          <Badge variant="outline" className="text-xs">
                            {book.readers} —á–∏—Ç–∞—Ç–µ–ª–µ–π
                          </Badge>
                        </div>
                      ))}
                    </div>
                  </div>

                  <Button className="w-full">
                    –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É
                  </Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {filteredCompanies.length === 0 && (
          <div className="text-center py-12">
            <Building2 className="h-16 w-16 text-gray-300 mx-auto mb-4" />
            <h3 className="text-xl font-medium text-gray-500 mb-2">–ö–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="text-gray-400">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default Companies;
